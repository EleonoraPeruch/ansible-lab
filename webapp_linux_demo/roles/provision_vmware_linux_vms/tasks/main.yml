---
- name: Generate VM Hostname in List Format
  set_fact:
    vm_hostname: "{{ hostname.split(',') }}"

- debug:
    msg: "{{ vm_hostname }}"

- debug:
    msg: "{{ vm_hostname[0] }}"

- debug:
    msg: "{{ vm_hostname[1] }}"

- debug:
    msg: "{{ vm_hostname[2] }}"

- debug:
    msg: "{{ vm_hostname[3] }}"

- debug:
    msg: "{{ vm_hostname[4] }}"

- debug:
    msg: "{{ vm_hostname[5] }}"

#- name: Create WebApp-1 from Template and Customize
#  vmware_guest:
#    datacenter: "{{ vm_datacenter }}"
#    validate_certs: no
#    folder: "/{{ vm_datacenter }}/vm"
#    name: "{{ vm_hostname[0] }}"
#    state: poweredon
#    template: "{{ vm_template }}"
#    esxi_hostname: "{{ esxi_host }}"
#    disk:
#    - size_gb: "{{ vm_disk_size }}"
#      type: "{{ vm_disk_provisioning_type }}"
#      datastore: "{{ vm_datastore }}"
#    hardware:
#      memory_mb: "{{ vm_ram }}"
#      num_cpus: "{{ vm_vcpu }}"
#    networks:
#    - name: "{{ vm_network }}"
#      ip: "{{ ipv4_address[0] }}"
#      netmask: "{{ subnet_netmask }}"
#      gateway: "{{ subnet_gateway }}"
#    wait_for_ip_address: yes
#    customization:
#      domain: "{{ vm_domain }}"
#      dns_servers:
#      - "{{ vm_dns_server }}"
#  delegate_to: localhost
#
#- name: Create WebApp-2 from Template and Customize
#  vmware_guest:
#    datacenter: "{{ vm_datacenter }}"
#    validate_certs: no
#    folder: "/{{ vm_datacenter }}/vm"
#    name: "{{ vm_hostname[1] }}"
#    state: poweredon
#    template: "{{ vm_template }}"
#    esxi_hostname: "{{ esxi_host }}"
#    disk:
#    - size_gb: "{{ vm_disk_size }}"
#      type: "{{ vm_disk_provisioning_type }}"
#      datastore: "{{ vm_datastore }}"
#    hardware:
#      memory_mb: "{{ vm_ram }}"
#      num_cpus: "{{ vm_vcpu }}"
#    networks:
#    - name: "{{ vm_network }}"
#      ip: "{{ ipv4_address[1] }}"
#      netmask: "{{ subnet_netmask }}"
#      gateway: "{{ subnet_gateway }}"
#    wait_for_ip_address: yes
#    customization:
#      domain: "{{ vm_domain }}"
#      dns_servers:
#      - "{{ vm_dns_server }}"
#  delegate_to: localhost

- name: Save information of VM names for subsequent workflow
  set_stats:
    data:
      webapp_servers: "{{ vm_hostname }}"
