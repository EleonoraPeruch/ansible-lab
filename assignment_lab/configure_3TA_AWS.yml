---
- name: Fetch Private Key from Bastion
  hosts: tag_AnsibleGroup_bastions
  become: yes

  tasks:
  - name: Fetch Private Key from Bastion
    fetch:
      src: "/root/.ssh/{{ hostvars[inventory_hostname]['ec2_tag_Project'] | regex_replace('three-tier-app-','') }}key.pem"
      dest: "{{ three_tier_prod_key }}"

- name: Inject Key into Ansible Tower
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
  - name: Install Tower CLI
    pip:
      name: ansible-tower-cli

  - name: Inject Key into Ansible Tower
    tower_credential:
      name: Three_Tier_Prod_Key
      organization: Default
      state: present
      tower_host: "{{ tower_node }}.{{ tower_guid }}.{{ tower_domain_path }}"
      tower_username: "{{ tower_username }}"
      tower_password: "{{ tower_password }}"
      kind: ssh
      username: "{{ three_tier_user }}"
      ssh_key_data: "{{ three_tier_prod_key }}"

- name: Setup load-balancer tier
  hosts: tag_AnsibleGroup_frontends
  become: yes
  gather_facts: true
  roles:
    - {name: base-config, tags: base-config}
    - {name: lb-tier, tags: [lbs, haproxy]}

- name: Setup app tier
  hosts: tag_AnsibleGroup_apps
  become: yes
  gather_facts: true
  roles:
    - {name: base-config, tags: base-config}
    - {name: app-tier, tags: [apps, tomcat]}

- name: Setup database tier
  hosts: tag_AnsibleGroup_appdbs
  become: yes
  gather_facts: true
  roles:
    - {name: base-config, tags: base-config}
    - {name: geerlingguy.postgresql, tags: [dbs, postgres]}

- name: Smoke test
  hosts: tag_AnsibleGroup_frontends
  tasks:
  - uri:
      url: http://127.0.0.1 
      return_content: yes
    register: frontend_result
    failed_when: "'Ansible Deployed Tomcat' not in frontend_result.content" 
